// Mocks generated by Mockito 5.4.4 from annotations
// in biluca_financas/test/reports/current_month_card_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:biluca_financas/accountability/models/identification.dart'
    as _i6;
import 'package:biluca_financas/reports/current_month_service.dart'
    as _i2;
import 'package:biluca_financas/common/data/grouped_by.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AccountabilityCurrentMonthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountabilityCurrentMonthService extends _i1.Mock
    implements _i2.AccountabilityCurrentMonthService {
  MockAccountabilityCurrentMonthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get currentMonth => (super.noSuchMethod(
        Invocation.getter(#currentMonth),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#currentMonth),
        ),
      ) as String);

  @override
  _i4.Future<int> count() => (super.noSuchMethod(
        Invocation.method(
          #count,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<double> getSum() => (super.noSuchMethod(
        Invocation.method(
          #getSum,
          [],
        ),
        returnValue: _i4.Future<double>.value(0.0),
      ) as _i4.Future<double>);

  @override
  _i4.Future<double> getBalance() => (super.noSuchMethod(
        Invocation.method(
          #getBalance,
          [],
        ),
        returnValue: _i4.Future<double>.value(0.0),
      ) as _i4.Future<double>);

  @override
  _i4.Future<double> getExpenses() => (super.noSuchMethod(
        Invocation.method(
          #getExpenses,
          [],
        ),
        returnValue: _i4.Future<double>.value(0.0),
      ) as _i4.Future<double>);

  @override
  _i4.Future<double> getIncomes() => (super.noSuchMethod(
        Invocation.method(
          #getIncomes,
          [],
        ),
        returnValue: _i4.Future<double>.value(0.0),
      ) as _i4.Future<double>);

  @override
  _i4.Future<List<_i5.GroupedBy<_i6.AccountabilityIdentification>>>
      getTotalByIdentification() => (super.noSuchMethod(
            Invocation.method(
              #getTotalByIdentification,
              [],
            ),
            returnValue: _i4.Future<
                    List<
                        _i5.GroupedBy<_i6.AccountabilityIdentification>>>.value(
                <_i5.GroupedBy<_i6.AccountabilityIdentification>>[]),
          ) as _i4
              .Future<List<_i5.GroupedBy<_i6.AccountabilityIdentification>>>);
}
